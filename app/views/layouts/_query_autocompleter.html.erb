<script src="http://yui.yahooapis.com/3.4.1/build/yui/yui-min.js"></script>
<script type="text/javascript">
 // Create a new YUI instance and populate it with the required modules.
 YUI().use('event', 'datasource', 'autocomplete', 'autocomplete-highlighters', function (Y) {
     var searchItemTemplate = 
 	"<div>" +
 	  "<span>{before}</span>" +
      "<span style='font-weight: bold'>{query}</span>" +
      "<span>{after}</span>" +
    "</div>";
    
    function selectSearchTerm(e) {
    	e.preventDefault();
    	Y.one('#queryInput').set('value', e.result.raw.term);
    	gotoWord(e.result.raw.term);
    	
    	return false;
    }
    
    function searchFormatter(query, results) {
	   return Y.Array.map(results, function (result) {
	    var searchResult = result.raw.term;
	
	    // Use string substitution to fill out the search template and
	    // return an HTML string for this result.
	    var matchIdx = searchResult.indexOf(query)
	        
	    return Y.Lang.sub(searchItemTemplate, {
	    	query:	query,
	    	before: searchResult.substr(0, matchIdx),
	        after: 	searchResult.substr(matchIdx + query.length)
	    });
	  });
	 }
    // Add the yui3-skin-sam class to the body so the default
    // AutoComplete widget skin will be applied.
    Y.one('body').addClass('yui3-skin-sam');
    
    // Use an DataSource
    var oDS = new Y.DataSource.IO({source: "<%= word_suggestions_path %>"});
	oDS.plug({fn:Y.Plugin.DataSourceCache, cfg:{max:5}});
    oDS.plug(Y.Plugin.DataSourceTextSchema, {
   	 schema: {
   	 	resultDelimiter: "\n",
    	fieldDelimiter: "\t",
    	resultFields: [{key:"term"}]
   	 }
    });
    
   // AutoComplete instance 
   Y.one('#queryInput').plug(Y.Plugin.AutoComplete, {
    resultHighlighter: 'wordMatch',
    resultFormatter: searchFormatter,
    requestTemplate: '?query={query}',
    source: oDS
   })
   
   Y.one('#queryInput').ac.on("select", selectSearchTerm);
 });
</script>